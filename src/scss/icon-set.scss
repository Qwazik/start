// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-181501-interface-name: 'icon-181501-interface';
$icon-181501-interface-x: 0px;
$icon-181501-interface-y: 0px;
$icon-181501-interface-offset-x: 0px;
$icon-181501-interface-offset-y: 0px;
$icon-181501-interface-width: 600px;
$icon-181501-interface-height: 564px;
$icon-181501-interface-total-width: 1200px;
$icon-181501-interface-total-height: 1128px;
$icon-181501-interface-image: '../img/icon-set.png';
$icon-181501-interface: (0px, 0px, 0px, 0px, 600px, 564px, 1200px, 1128px, '../img/icon-set.png', 'icon-181501-interface', );
$icon-185958-social-media-icons-name: 'icon-185958-social-media-icons';
$icon-185958-social-media-icons-x: 600px;
$icon-185958-social-media-icons-y: 0px;
$icon-185958-social-media-icons-offset-x: -600px;
$icon-185958-social-media-icons-offset-y: 0px;
$icon-185958-social-media-icons-width: 600px;
$icon-185958-social-media-icons-height: 564px;
$icon-185958-social-media-icons-total-width: 1200px;
$icon-185958-social-media-icons-total-height: 1128px;
$icon-185958-social-media-icons-image: '../img/icon-set.png';
$icon-185958-social-media-icons: (600px, 0px, -600px, 0px, 600px, 564px, 1200px, 1128px, '../img/icon-set.png', 'icon-185958-social-media-icons', );
$icon-214265-basic-flat-icons-name: 'icon-214265-basic-flat-icons';
$icon-214265-basic-flat-icons-x: 0px;
$icon-214265-basic-flat-icons-y: 564px;
$icon-214265-basic-flat-icons-offset-x: 0px;
$icon-214265-basic-flat-icons-offset-y: -564px;
$icon-214265-basic-flat-icons-width: 600px;
$icon-214265-basic-flat-icons-height: 564px;
$icon-214265-basic-flat-icons-total-width: 1200px;
$icon-214265-basic-flat-icons-total-height: 1128px;
$icon-214265-basic-flat-icons-image: '../img/icon-set.png';
$icon-214265-basic-flat-icons: (0px, 564px, 0px, -564px, 600px, 564px, 1200px, 1128px, '../img/icon-set.png', 'icon-214265-basic-flat-icons', );
$spritesheet-width: 1200px;
$spritesheet-height: 1128px;
$spritesheet-image: '../img/icon-set.png';
$spritesheet-sprites: ($icon-181501-interface, $icon-185958-social-media-icons, $icon-214265-basic-flat-icons, );
$spritesheet: (1200px, 1128px, '../img/icon-set.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
